<?xml version="1.0"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="chrome://MouseControl/content/prefs.css" type="text/css"?>

<!DOCTYPE prefwindow SYSTEM "chrome://MouseControl/locale/prefs.dtd">

<prefwindow xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" title="MouseControl - &Options;" id="MCOps" onload="MCOps.load()">
<stringbundleset id="stringbundleset">
	<stringbundle id="strings" src="chrome://MouseControl/locale/prefs.properties"/>
</stringbundleset>
  <script>
  <![CDATA[
	var MCOps =
	{
		TrigDisp: -1,
		TrigTO: 0,
		TrigPause: 0,
		TrigLayout: [],
		LayoutOrder: ['PrimTrig','PrimAltTrig','PrimAlt2Trig','SecTrig','SecAltTrig'],//ids of things in trigint.xul
		wm: Components.classes["@mozilla.org/appshell/window-mediator;1"].getService(Components.interfaces.nsIWindowMediator),
		load: function()
		{
			this.strbundle = document.getElementById('strings');
			var zoomStyle = document.getElementById('zoomStyle').value;
			//make sure settings are proper, mousecontrol pref is dominating. meaning if discrepancy found in settings it will be adjust to be in accordance with users mousecontrol settings
			var recWin = this.wm.getMostRecentWindow("navigator:browser");
			if (zoomStyle == 2)	{
				if (MouseControl.globalZoom <= ZoomManager.MIN) {
					//should never happen
					//alert('MouseControl Exception 34');
					MouseControl.globalZoom = ZoomManager.MIN;
				}
				if (recWin.gPrefService.getBoolPref('browser.zoom.siteSpecific'))	{
					//can happen if user change browser.zoom.siteSpecific from 3rd party source
					//alert('MouseControl Exception 35');
					recWin.gPrefService.setBoolPref('browser.zoom.siteSpecific',false);
				}
			} else if (zoomStyle == 1) {
				//can happen if user change browser.zoom.siteSpecific from 3rd party source
				if (!recWin.gPrefService.getBoolPref('browser.zoom.siteSpecific'))	{
					//alert('MouseControl Exception 36');
					recWin.gPrefService.setBoolPref('browser.zoom.siteSpecific',true);
				}
			} else if (zoomStyle == 0) {
				//can happen if user change browser.zoom.siteSpecific from 3rd party source
				if (recWin.gPrefService.getBoolPref('browser.zoom.siteSpecific'))	{
					//alert('MouseControl Exception 37');
					recWin.gPrefService.setBoolPref('browser.zoom.siteSpecific',false);
				}
			}
			//end make settings proper

			this.disableFeature('MCFNew',!document.getElementById('PrimaryDblFeat').value);
			this.disableFeature('MCFZoom',!document.getElementById('SecondaryFeat').value);
			this.TrigLbl = document.getElementById('TrigLbl');
			for (var i=0; i<this.LayoutOrder.length; i++)	{
				this.TrigLayout[i] = document.getElementById(this.LayoutOrder[i]).value;
			}
			this.TrigCycle();
			this.initialZoomStyle = document.getElementById('zoomStyle').value;
			document.getElementById('MCOps').centerWindowOnScreen();
		},
		TrigTxt: function()
		{
			if (this.TrigDisp >= 5)	{
				this.TrigDisp = 0;
			}
			var NewDisp;
			var dispToBtn = [this.strbundle.getString('Prim'),this.strbundle.getString('PrimAlt'),this.strbundle.getString('PrimAlt2'),this.strbundle.getString('Sec'),this.strbundle.getString('SecAlt')];
			var btnToTxt = [this.strbundle.getString('Left'),this.strbundle.getString('Middle'),this.strbundle.getString('Right')];
			NewDisp = dispToBtn[this.TrigDisp] + ': ' + btnToTxt[this.TrigLayout[this.TrigDisp]] + ' ' + this.strbundle.getString('MouseBtn');
			return NewDisp;
		},
		TrigCycle: function()
		{
			this.TrigDisp++;
			this.TrigLbl.value = this.TrigTxt(this.TrigDisp);
			this.TrigChange = new Date().getTime();
			this.TrigTO = setTimeout(function(){MCOps.TrigCycle()},2000);
			
		},
		TrigOut: function()
		{
			if (!this.TrigOpen)	{
				this.TrigLbl.style.width = '';
				this.TrigLbl.value = this.TrigTxt(this.TrigDisp);
				if (this.TrigTO == 0) {
					this.TrigTO = setTimeout(function(){MCOps.TrigCycle()}, 2000-(this.TrigPause-this.TrigChange));
				}
			}
		},
		TrigOver: function()
		{
			clearTimeout(this.TrigTO);
			this.TrigTO = 0;
			this.TrigPause = new Date().getTime();
			this.TrigLbl.style.width = this.TrigLbl.boxObject.width + 'px';
			this.TrigLbl.value = 'OPEN INTERFACE';
		},
		TrigIntOpen: function()
		{
			this.TrigOpen = true;
			var params = {inn:MCOps.TrigLayout.slice(), out:null};
			window.openDialog('chrome://MouseControl/content/TrigInt.xul', '','chrome, dialog, modal, resizable=no,width=10px,height=10px',params).focus();
			if (params.out)	{
				if (this.TrigLayout.toSource() != params.out.toSource())	{
					var changed = true;	
				}
				this.TrigLayout = params.out.slice();
				for (var i=0; i<this.LayoutOrder.length; i++)	{
					document.getElementById(this.LayoutOrder[i]).value = params.out[i];
				}
			}
			this.TrigOpen = false;
			//if change in buttons detected then set TrigDisp = 0 and go to trigout else just go to trigout
			if (changed)	{
				this.TrigDisp = 0;
				this.TrigPause = this.TrigChange;
			}
			this.TrigOut();
		},
		clearSSM: function()	{
			if (confirm('Are you sure you want to clear ALL saved site specific zoom levels?'))	{
				
			}
		},
		more: function(subject,content)	{
			var params = {inn:[this.strbundle.getString('MoreInfo'),subject,content,document.getElementById('MCOps').getBoundingClientRect().width], out:null};
			window.openDialog('chrome://MouseControl/content/More.xul', '','chrome, dialog, modal, resizable=no,width=10px,height=10px',params).focus();
		},
		disableFeature: function(feature,val)
		{
			var nodes = document.getElementsByClassName(feature);
			var linkDisp = val ? 'none' : '';
			for (var i=0; i<nodes.length; i++){
				if (nodes[i].classList.contains('text-link')) {
					nodes[i].style.display = linkDisp;
				} else {
					nodes[i].disabled = val;
				}
			}
		},
		accept: function()
		{
			document.getElementById('MCOps')._fireButtonEvent('accept');

			var zoomStyle = document.getElementById('zoomStyle').value;
			if (zoomStyle != this.initialZoomStyle)	{
				var setSiteSpecific = false; //used to run a certain code once, because the while loop below runs through each browser
				var globalZoom;
				var browserWindows = this.wm.getEnumerator("navigator:browser");
				while (browserWindows.hasMoreElements())	{
					var browserWindow = browserWindows.getNext();
					if (browserWindow.MouseControl)	{
						if (zoomStyle == 2)	{
							if (!setSiteSpecific)	{
								globalZoom = this.wm.getMostRecentWindow("navigator:browser").ZoomManager.zoom; //should be set to zoom level of window that opened this pref window WELL for now lets try most recent window
								browserWindow.gPrefService.setBoolPref('browser.zoom.siteSpecific',false);
							}
							browserWindow.MouseControl.globalZoom = globalZoom;
							browserWindow.MouseControl.prefs.setCharPref('globalZoom',globalZoom);
						} else {
							browserWindow.MouseControl.globalZoom = -1;
							browserWindow.MouseControl.prefs.setCharPref('globalZoom','-1');
							if (!setSiteSpecific)	{
								if (zoomStyle == 0)	{
									browserWindow.gPrefService.setBoolPref('browser.zoom.siteSpecific',false);
								} else {
									browserWindow.gPrefService.setBoolPref('browser.zoom.siteSpecific',true);
								}
							}
						}
						browserWindow.MouseControl.initPrefs();
					}
				}
			}

			if (zoomStyle == this.initialZoomStyle)	{
				//zoom style not changed, so did not get to execute the initPrefs, so do it now
				var browserWindows = this.wm.getEnumerator("navigator:browser");
				while (browserWindows.hasMoreElements())	{
					var browserWindow = browserWindows.getNext();
					if (browserWindow.MouseControl)	{
						browserWindow.MouseControl.initPrefs();
					}
				}
			}

			//document.getElementById('MCOps').acceptDialog();
			window.close();

		},
		defaults: function()
		{
			document.getElementById('scrollUpMoveRight').value = false;
			document.getElementById('newTabRelativeToCurrent').value = true;
			document.getElementById('ZoomDisplay').value = false;
			document.getElementById('zoomStyle').value = 1;
			document.getElementById('zoomAffect').value = true;
			document.getElementById('PrimaryFeat').value = true;
			document.getElementById('PrimaryDblFeat').value = true;
			document.getElementById('SecondaryFeat').value = false;
			document.getElementById('PrimTrig').value = 2;
			document.getElementById('PrimAltTrig').value = 1;
			document.getElementById('PrimAlt2Trig').value = 0;
			document.getElementById('SecTrig').value = 0;
			document.getElementById('SecAltTrig').value = 1;
			this.TrigLayout = [2,1,0,0,1];
			document.getElementById('DblClickSpeed').value = 300;
			document.getElementById('HoldDelay').value = 300;
			this.disableFeature('MCFNew',false);
			this.disableFeature('MCFZoom',true);
			clearTimeout(this.TrigTO);
			this.TrigDisp = 0;
			this.TrigPause = this.TrigChange;
			this.TrigOut();
		}
	}
  ]]>
  </script>
  <prefpane style="padding:0;">
    <preferences>
      <preference id="scrollUpMoveRight" name="extensions.MouseControl@neocodex.us.scrollUpMoveRight" type="bool" />
      <preference id="newTabRelativeToCurrent" name="extensions.MouseControl@neocodex.us.newTabRelativeToCurrent" type="bool" />
      <preference id="zoomStyle" name="extensions.MouseControl@neocodex.us.zoomStyle" type="int" />
      <preference id="zoomAffect" name="browser.zoom.full" type="bool" />
      <preference id="PrimaryDblFeat" name="extensions.MouseControl@neocodex.us.PrimaryDblFeat" type="bool" />
      <preference id="SecondaryFeat" name="extensions.MouseControl@neocodex.us.SecondaryFeat" type="bool" />

      <preference id="PrimTrig" name="extensions.MouseControl@neocodex.us.PrimTrig" type="int" />
      <preference id="DblClickSpeed" name="extensions.MouseControl@neocodex.us.DblClickSpeed" type="int" />
      <preference id="HoldDelay" name="extensions.MouseControl@neocodex.us.HoldDelay" type="int" />
      <preference id="SecTrig" name="extensions.MouseControl@neocodex.us.SecTrig" type="int" />

      <preference id="PrimaryFeat" name="extensions.MouseControl@neocodex.us.PrimaryFeat" type="bool" />
      <preference id="PrimAltTrig" name="extensions.MouseControl@neocodex.us.PrimAltTrig" type="int" />
      <preference id="PrimAlt2Trig" name="extensions.MouseControl@neocodex.us.PrimAlt2Trig" type="int" />
      <preference id="SecAltTrig" name="extensions.MouseControl@neocodex.us.SecAltTrig" type="int" />

      <preference id="ZoomDisplay" name="extensions.MouseControl@neocodex.us.ZoomDisplay" type="bool" />
    </preferences>
	<vbox id="main">
		<vbox>
		    <hbox style="margin-bottom:2px;">
		        <hbox align="end" flex="1">
				<label style="background:url(chrome://MouseControl/skin/icon-shadow.png) no-repeat scroll left bottom transparent;width:34px;height:37px;margin:0 8px 0 5px;"/>
				<label style="background:url(chrome://MouseControl/skin/title.png) no-repeat scroll left bottom transparent;width:205px;height:28px;margin:0 6px 2px 0;"/>
				<label value="&VERSION;" style="margin:0;"/>
		        </hbox>
		        <label value="&Options;" style="font-weight:bold;color:#44474d;"/>
		    </hbox>
		    <groupbox>
			<caption label="&General;"/>
			<hbox align="baseline">
				<label value="&ScrollDirection;" flex="1"/>
				<menulist preference="scrollUpMoveRight">
					<menupopup>
						<menuitem label="&UpDnTabLtRt;" value="false"/>
						<menuitem label="&UpDnTabRtLt;" value="true"/>
					</menupopup>
				</menulist>
			</hbox>
			<hbox align="baseline">
				<label value="&DblClickSpeed; &ms;"/>
				<label value="&Info;" style="margin-left:0;" class="text-link info" onclick="MCOps.more('&General;: &DblClickSpeed;','&InfoDblClickSpeed;')"/><seperator flex="1"/>
				<textbox size="3" preference="DblClickSpeed" style="text-align:center;"/>
			</hbox>
			<hbox align="baseline">
				<label value="&HoldDelay; &ms;"/>
				<label value="&Info;" style="margin-left:0;" class="text-link info" onclick="MCOps.more('&General;: &HoldDelay;','&InfoHoldDelay;')"/><seperator flex="1"/>
				<textbox size="3" preference="HoldDelay" style="text-align:center;"/>
			</hbox>
			<hbox align="baseline">
				<label value="&TrigLayout;" flex="1"/>
				<textbox size="1" style="opacity:0;" disabled="true"/>
				<label value="" onmouseover="MCOps.TrigOver()" onmouseout="MCOps.TrigOut()" onclick="MCOps.TrigIntOpen()" class="text-link" style="text-align:right;" id="TrigLbl"/>
			</hbox>
		    </groupbox>
		    <groupbox>
			<caption label="&Features;"/>
		     	<checkbox preference="PrimaryFeat" label="&FeatPrimTrig;"/>
		     	<checkbox preference="PrimaryDblFeat" label="&FeatPrimTrigDbl;" oncommand="MCOps.disableFeature('MCFNew',!this.checked)"/>
			<hbox align="baseline">
				<checkbox preference="SecondaryFeat" label="&FeatSecTrigZoom;" flex="1" oncommand="MCOps.disableFeature('MCFZoom',!this.checked)"/>
				<menulist preference="ZoomDisplay" class="MCFZoom">
					<menupopup>
						<menuitem label="&HideZoomDisplay;" value="false"/>
						<menuitem label="&ShowZoomDisplay;" value="true"/>
					</menupopup>
				</menulist>
			</hbox>
		    </groupbox>
		    <groupbox>
			<caption>
				<label value="&NewTabPos;" class="MCFNew"/>
			</caption>
			<radiogroup preference="newTabRelativeToCurrent" class="MCFNew">
		      		<radio value="false" label="&EndOfTabBar;"/>
		     		<radio value="true" label="&NextToCurrentTab;"/>
			</radiogroup>
		    </groupbox>
		    <groupbox>
			<caption>
				<label value="&ZoomStyleAndMemory;" class="MCFZoom"/>
			</caption>
			<radiogroup preference="zoomStyle" class="MCFZoom">
	      			<hbox align="center">
					<radio value="2" label="&Global;"/>
					<label value="&Info;" class="text-link MCFZoom info" onclick="MCOps.more('&ZoomStyleAndMemory;: &Global;','&InfoGlobal;')"/>
				</hbox>
		      		<hbox align="center">
					<radio value="1" label="&SiteSpecific;"/>
					<label value="&Info;" class="text-link MCFZoom info" onclick="MCOps.more('&ZoomStyleAndMemory;: &SiteSpecific;','&InfoSiteSpecific;')"/>
				</hbox>
				<hbox align="center">
					<radio value="0" label="&Temporary;"/>
					<label value="&Info;" class="text-link MCFZoom info" onclick="MCOps.more('&ZoomStyleAndMemory;: &Temporary;','&InfoTemporary;')"/>
				</hbox>
			</radiogroup>
		    </groupbox>
		    <groupbox>
			<caption>
				<label value="&ZoomAffectedArea;" class="MCFZoom"/>
			</caption>
			<radiogroup preference="zoomAffect" class="MCFZoom">
	     			<radio value="true" label="&AllContent;"/>
	      			<radio value="false" label="&TextOnly;"/>
			</radiogroup>
		    </groupbox>
		</vbox>
	</vbox>
	<vbox align="end">
		<label value="&RestoreDefaults;" class="text-link quicklinks" onclick="MCOps.defaults()"/>
	</vbox>
	<vbox align="center">
	    <hbox style="height:3em;" align="center">
	        <label value="&Apply;" class="text-link applylink" dlgtype="accept" onclick="MCOps.accept()"/>
		<spacer width="10"/>
	        <label value="CANCEL" class="text-link closelink" dlgtype="cancel" onclick="document.getElementById('MCOps').cancelDialog()"/>
	    </hbox>
	</vbox>
  </prefpane>
</prefwindow>