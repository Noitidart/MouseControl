<html>
<head>
<title>MouseControl - Preferences</title>
<link rel="icon" type="image/png" href="favicon.png">
<style>
	.pseudo-config {
		display: none;
		position: absolute;
		width: 13px;
		height: 13px;
		top: calc(50% - (13px / 2));
		opacity: .2;
		cursor: pointer;
		transition: opacity 170ms;
	}
	
	.pseudo-config:hover {
		opacity: .6;
	}
	
	.trash-function {
		background: transparent url(trash.png) no-repeat center center;
		left: 0;
	}
	
	.configure-function {
		background: transparent url(wrench.png) no-repeat center center;
		left: calc(100% - 23px);
	}
	
	.share-function {
		background: transparent url(network-tri.png) no-repeat center center;
		left: calc(100% - 6px);
	}
</style>
<link href="selectbox.css" type="text/css" rel="stylesheet" />
		<script type="text/javascript" src="jquery.js"></script>
		<script type="text/javascript" src="selectbox.js"></script>
		<script>
			/*start - chrome stuff*/
			const {classes: Cc, interfaces: Ci, utils: Cu} = Components;
			Cu.import('resource://gre/modules/osfile.jsm');
			Cu.import('resource://gre/modules/Services.jsm');
			Cu.import('resource://gre/modules/addons/XPIProvider.jsm');
			Cu.import('resource://gre/modules/Promise.jsm');
			
			var MouseControl = XPIProvider.bootstrapScopes['MouseControl@jetpack'];
			const installPath = MouseControl.self.aData.installPath.path; //platform specific so no need to normalize
			const funcsFilePath = OS.Path.join(installPath, 'funcs.json');
			const TDecoder = new TextDecoder();
			
			var funcsFileContents; //holds contents after reading funcsFilePath, should unprased json
			var funcsFileObj; //parsed json
			
			document.addEventListener('DOMContentLoaded', init, false);
			console.log('JSON:', JSON);
			function init() {
				try {
					var promise = readFuncs();
					promise.then(
						function(aVal) {
							console.info('Promise Success: `readFuncs()`', 'aVal:', aVal);
							console.info('funcsFileContents:', funcsFileContents);
							refreshConfigWrap();
						},
						function(aReason) {
							console.error('Promise Rejected: `readFuncs()`', 'aReason:', aReason);
							alert('Failed to read functions file. See console for more detail. Please reload the page to try again.');
							document.body.textContent = 'Failed to read functions file. See console for more detail. Please reload the page to try again.';
						}
					);
				} catch (ex) {
					console.error('ex=', ex);
				}
			}
			
			function refreshConfigWrap() {
				//removes all elements in configWrap and then re-appends them based on domJson object
				var domJson = [];
/*
			<div class="configSubhead">TABS<hr></div>
			<span class="opt" group="tabs">
				<div class="pseudo-config trash-function"></div>
				<div class="pseudo-config configure-function"></div>
				<div class="pseudo-config share-function"></div>
				<span>
					Select Tab to Right
					<small>Focuses tab to right of current tab</small>
				</span>
				<span><img src="mouse-left.png" /> + <img src="mouse-left.png"/></span>
			</span>
			<hr>
*/
				console.log('funcsFileObj=', funcsFileObj);
				
				funcsFileObj.sort(function(a, b) {
					if (a.group == b.group) {
						return 0;
					} else {
						return a.group > b.group;
					}
				});
				
				var lastGroup = '';
				Array.prototype.forEach.call(funcsFileObj, function(config) {
					if (lastGroup != config.group) {
						//put in header
						domJson.push(
							['div', {class: 'configSubhead'}, 
								config.group.toUpperCase(),
								['hr', {}
									
								]
							]
						);
					}
					lastGroup = config.group;
					
					domJson.push(
						['span', {class:'opt', group:config.group},
							['div', {class:'pseudo-config trash-function', onclick:'showMsg(".msg-trash")'}
								
							],
							['div', {class:'pseudo-config configure-function', onclick:'showMsg(".msg-customize")'}
								
							],
							['div', {class:'pseudo-config share-function', onclick:'showMsg(".msg-share")'}
								
							],
							['span', {},
								config.name,
								['small', {},
									config.desc
								]
							],
							['span', {},
								config.combo
							]
						]
					);
					domJson.push(
						['hr', {}
							
						]
					);
				});

				var configWrap = document.querySelector('#configWrap');
				while (configWrap.hasChildNodes()) {
					configWrap.removeChild(configWrap.lastChild);
				}
				
				configWrap.appendChild(jsonToDOM(domJson, document, {}));
				
			}
			
			function readFuncs() {
				try {
					var promise = OS.File.read(funcsFilePath);
					return promise.then(
					  function onSuc(array) {
						funcsFileContents = TDecoder.decode(array);
						funcsFileObj = JSON.parse(funcsFileContents); //if it cant parse the try-catch will catch it
						return Promise.resolve('read');
					  },
					  function onRej(aReason) {
						var __proto__all = Object.getOwnPropertyNames(aReason.__proto__);
						var __proto__enum = Object.keys(aReason.__proto__);
						var __proto__nonenum = __proto__all.filter(function (k) { //the nonenum are the error reasons, like `becauseClosed` `becauseExists` `becauseNoSuchFile` etc
							return __proto__enum.indexOf(k) == -1; //if not found in enum, return true so we keep it
						});

						var aReasonStr = [];
						Array.prototype.forEach.call(__proto__nonenum, function (k) {
							if (aReason[k]) {
								aReasonStr.push(k);
							}
						});
						
						if (aReasonStr.indexOf('becauseNoSuchFile') > -1) {
							console.warn('Promise Rejected: `OS.File.read(funcsFilePath)`', 'aReasonStr:', aReasonStr.join(','), 'aReason:', aReason, 'will now write new file with default functions');
							//create file with default json
							funcsFileContents = JSON.stringify(MouseControl.funcsFileObjDefault);
							funcsFileObj = JSON.parse(funcsFileContents);
							var promise2 = OS.File.writeAtomic(funcsFilePath, funcsFileContents, {tmpPath: funcsFilePath + '.tmp', encoding:'utf-8'});
							return promise2.then(
								function(aVal) {
									return Promise.resolve('wrote');
								},
								function(aReason) {
									console.log('Promise2 Rejected: `OS.File.writeAtomic`', 'aReason:', aReason, 'will now throw this back to the main promise of `readFuncs()`, so this will be logged twice');
									return Promise.reject(aReason);
								}
							);
						} else {
							console.error('Promise Rejected: `OS.File.read(funcsFilePath)`', 'aReasonStr:', aReasonStr.join(','), 'aReason:', aReason, 'dont know how to handle this so return this rejection to main promise of `readFuncs()`');
							return Promise.reject(aReason);
						}
					  }
					);
				} catch (ex) {
					console.warn('readFuncs Ex Occured:', ex);
					return Promise.reject(ex);
				}
			}
			
			/*end - chrome stuff*/
		</script>
		<script>
			/*DOM Building and HTML Insertion*/
			/*dom insertion library function from MDN - https://developer.mozilla.org/en-US/docs/XUL_School/DOM_Building_and_HTML_Insertion*/
			jsonToDOM.namespaces = {
				html: 'http://www.w3.org/1999/xhtml',
				xul: 'http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul'
			};
			jsonToDOM.defaultNamespace = jsonToDOM.namespaces.html;
			function jsonToDOM(xml, doc, nodes) {
				function namespace(name) {
					var m = /^(?:(.*):)?(.*)$/.exec(name);        
					return [jsonToDOM.namespaces[m[1]], m[2]];
				}

				function tag(name, attr) {
					if (Array.isArray(name)) {
						var frag = doc.createDocumentFragment();
						Array.forEach(arguments, function (arg) {
							if (!Array.isArray(arg[0]))
								frag.appendChild(tag.apply(null, arg));
							else
								arg.forEach(function (arg) {
									frag.appendChild(tag.apply(null, arg));
								});
						});
						return frag;
					}

					var args = Array.slice(arguments, 2);
					var vals = namespace(name);
					var elem = doc.createElementNS(vals[0] || jsonToDOM.defaultNamespace, vals[1]);

					for (var key in attr) {
						var val = attr[key];
						if (nodes && key == 'key')
							nodes[val] = elem;

						vals = namespace(key);
						if (typeof val == 'function')
							elem.addEventListener(key.replace(/^on/, ''), val, false);
						else
							elem.setAttributeNS(vals[0] || '', vals[1], val);
					}
					args.forEach(function(e) {
						try {
							elem.appendChild(
												Object.prototype.toString.call(e) == '[object Array]'
												?
													tag.apply(null, e)
												:
													e instanceof doc.defaultView.Node
													?
														e
													:
														doc.createTextNode(e)
											);
						} catch (ex) {
							elem.appendChild(doc.createTextNode(ex));
						}
					});
					return elem;
				}
				return tag.apply(null, xml);
			}
			/*end - dom insertion library function from MDN*/
		</script>
		<script>
			/*start - non jquery dom stuff*/
			function showMsg(selector) {
				var container = document.querySelector(selector);
				/* i thought if i did this than scroll would not work while over this div but its not true
				container.style.width = window.innerWidth + 'px';
				container.style.height = window.innerHeight + 'px';
				*/
				var msgWrap = container.querySelector('.msg-wrap');
				if (!msgWrap) {
					alert('Error: Message wrap not found');
					return;
				}
				
				container.style.pointerEvents = 'auto';
				container.style.opacity = 1;
				msgWrap.style.opacity = 1;
				msgWrap.style.marginTop = 0;
				msgWrap.style.pointerEvents = 'auto';
			}
			function hideMsg(selector) {
				var container = document.querySelector(selector);
				
				var msgWrap = container.querySelector('.msg-wrap');
				if (!msgWrap) {
					alert('Error: Message wrap not found');
					return;
				}
				
				container.style.transitionDelay = '40ms';
				msgWrap.style.transitionDelay = '0';
				container.style.opacity = ''; //:learned: setting to blank removes the inline style property
				msgWrap.style.marginTop = '';
				msgWrap.style.pointerEvents = '';
				msgWrap.style.transition = 'opacity 150ms ease-in, margin-top 150ms ease-in';
				msgWrap.style.opacity = '';
				
				container.addEventListener('transitionend', function() {
					container.removeEventListener('transitionend', arguments.callee, false);
					container.style.pointerEvents = '';
					container.style.transitionDelay = '';
					msgWrap.style.transitionDelay = '';
					msgWrap.style.transition = '';
				}, false);
			}
			/*end - non jquery dom stuff*/
		</script>
		<script type="text/javascript">
			/*start - jquery stuff*/
			$(function () {
				$("select").selectbox({
					effect: 'fade'
				});
				
			});
			function addSubheads() {
				//to the config div it adds a subhead over every group of opts
				
			}
		</script>

<style>
@font-face {
	font-family:meta-pro-bold;
	src: url('MetaProBold.otf');
}

@font-face {
	font-family:ttahoma;
	src: url('tahoma.ttf');
}

body {
	font-family: tahoma;
	font-size: 12px;
	color: #000000;
	display: flex;
	flex-direction: column;
	align-items: center;
	cursor: default;
}

#main-wrap {
	width: 50%;
	background-color: rgb(247, 247, 247);
	border-radius: 2px;
	box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.298);
	padding: 10px 10px 0;
	z-index: 1;
}

#header {
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	line-height: 42px;
	margin-bottom: 5px;
}

#header > span.logo {
	font-family: meta-pro-bold;
	font-size: 42px;
	color: #696C71;
	letter-spacing: -2px;
}

#header > img.icon {
	margin-bottom: 3px;
	margin-right: 5px;
}

#header > span.version {
	/*
	vertical-align: baseline;
	margin-top: 12px;
	*/
	align-self: flex-end;
	line-height: 13px;
	font-size: 13px;
	margin-bottom: 7px;;
	margin-left: 7px;
}

#header > span.title {
/*
	vertical-align: top;
	margin-left: 5px;
	margin-top: -20px;
	flex-shrink: 0;
*/
	font-size: 13px;
	font-weight: bold;
	align-self: flex-start;
	flex-grow: 1;
	text-align: right;
	line-height: 14px;
	margin-top: 4px;
}

.subhead {
	padding:3px;
	padding-left: 17px;
	border-bottom: 1px solid #44474D;
	/*color: #44474D;*/
	display: block;
	font-size: 13px;
	font-weight: bold;
	background: transparent url(general.png) no-repeat left 5px;
	margin-bottom: 5px;
}

#timing > .subhead {
	background-image: url(timing.png);
}

#configuration > .subhead {
	background-image: url(configuration.png);
}

#zoom > .subhead {
	background-image: url(zoom.png);
}

#tabs > .subhead {
	background-image: url(tabs.png);
}

.opt {
	display: flex;
	justify-content: space-between;
	align-items: center;
	padding: 0 3px 4px 3px;
	line-height: 20px; /* must match height of select boxes otherwise opt spans are different heights */
}

.group > .opt:last-of-type {
	padding-bottom: 0;
}

.opt > select {
	text-align: left;
}

.group {
	margin-bottom: 10px;
}

input[type=text]{
	background-color: rgb(255, 255, 255);
	border-width: 1px;
	border-style: solid;
	border-color: rgb(160, 160, 160) rgb(185, 185, 185) rgb(185, 185, 185);
	/*border-radius: 2px;*/
	height: 20px;
	position: relative;
	width: 5em;
	color: rgb(68, 68, 68);
	text-align: center;
	font-size: 12px;
	padding-bottom: 2px;
	box-shadow: 0px 1px 2px -1px rgba(0, 0, 0, 0.2) inset, 0px 1px 1px rgba(0, 0, 0, 0.05);
}

textarea {
	background-color: rgb(255, 255, 255);
	border-width: 1px;
	border-style: solid;
	border-color: rgb(160, 160, 160) rgb(185, 185, 185) rgb(185, 185, 185);
	/*border-radius: 2px;*/
	position: relative;
	/*font-family: tahoma;*/
	width: 100%;
	color: rgb(68, 68, 68);
	text-align: left;
	font-size: 12px;
	padding-bottom: 2px;
	box-shadow: 0px 1px 2px -1px rgba(0, 0, 0, 0.2) inset;
	resize: none;
	padding: 0 2px;
}

button:active {
  -moz-box-shadow: inset 0 1px 2px rgba(0,0,0,.1);
  box-shadow: inset 0 1px 2px rgba(0,0,0,.1);
  background-color: #eee;
  background-image: -moz-linear-gradient(top,#eee,#e0e0e0);
  background-image: linear-gradient(top,#eee,#e0e0e0);
  border: 1px solid #ccc;
  color: #333;
  z-index: 2;
}

button:not(:active):hover {
	-moz-box-shadow: 0 1px 1px rgba(0, 0, 0, .3);
	box-shadow: 0 1px 1px rgba(0, 0, 0, .3);
  border: 1px solid #999;

}

button {
	background-color: rgb(248, 248, 248);
	background-image: -moz-linear-gradient(center top,rgb(248, 248, 248),rgb(241, 241, 241));
	background-image: linear-gradient(center top,rgb(248, 248, 248),rgb(241, 241, 241));
	-moz-box-shadow: 0 1px 1px rgba(0, 0, 0, .1);
	box-shadow: 0 1px 1px rgba(0, 0, 0, .1);
	border: 1px solid rgb(198, 198, 198);
	color: rgb(51, 51, 51);
	padding-bottom:2px;
	border-radius: 4px;
	font-size: 12px;
	line-height: 16px;
	z-index: 0;
	position: relative;
}

button.import {
	border-top-left-radius: 0;
	border-bottom-left-radius: 0;
}

button.export {
	border-top-right-radius: 0;
	border-bottom-right-radius: 0;
	left: 1px;
}

button.export:hover {
	z-index:1;
}

button.import:hover {
	z-index:1;
}

</style>

<style>
	/* message wrapper */

	.msg-wrap {
		background-color: rgb(247, 247, 247);
		border-radius: 2px;
		box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
		padding: 10px;
		margin-top: -20px; /*for transition anim*/
		opacity: 0;
		pointer-events: none;
		transition: margin-top 150ms ease-in;
		transition-delay: 40ms;
		display: inline-block;
	}
	
	.msg-wrap .row {
		margin-bottom: 3px;
		display: flex;
		align-items: center;
	}
	
	.msg-share span {
		width: 8em;
	}
	.msg-share input[type=text] {
		flex-grow: 1;
		text-align: right;
	}
	
	.msg-customize span {
		width: 6em;
	}
	
	.msg-customize input[type=text] {
		text-align: left;
	}

	.msg-customize .msg-cust-name {
		width: 200px; /* match the width of the select box */
	}
	
	.msg-customize .msg-cust-desc {
		flex-grow: 1;
	}

	.msg-body {
		padding: 0 10px;
		margin: 0;
		position: relative;
	}
	
	.msg-share .msg-header {
		background-image: url(network-tri.png);
		padding: 0 0 5px 0;
	}	
	.msg-trash .msg-header {
		background-image: url(trash.png);
		text-indent: 20px;
		padding: 0 0 4px 0;
	}
	.msg-customize .msg-header {
		background-image: url(wrench.png);
		text-indent: 21px;
		padding: 0 0 5px 0;
	}
	.msg-create .msg-header {
		background-image: url(pencil.png);
		text-indent: 21px;
		padding: 0 0 5px 0;
	}
	.msg-header {
		background: transparent url(x.png) no-repeat 2px 1px;
		margin: 0 0 5px 0;
		font-weight: bold;
		padding: 0 0 4px 0;
		text-indent: 18px;
		border-bottom: 1px solid black;
	}

	.msg-wrap small {
		padding: 6px; /* for some reason padidng-top-bottom and margin-top-bottom are not having affect on small */
		white-space: nowrap;
	}
	
	.msg-wrap small + .row {
		margin-top: 5px;
	}
	
	.msg-trash .msg-wrap {
		width: 300px;
	}
	
	.msg-trash .row {
		text-align: center;
		margin-top: 15px;
	}
	
	.msg-wrap .row:last-of-type {
		padding-top: 6px;
		justify-content: space-around;
	}
	
	.msg-wrap button {
		margin-right: 10px;
		width: 50%;
		position: relative;
		text-indent: 16px;
	}
	
	.msg-customize button {
		width: 30%;
		margin-right: -30%;
	}
	
	.msg-wrap .msg-ok:before, .msg-wrap .msg-cancel:before {
		position:absolute;
		background-repeat: no-repeat;
		background-position: center center;
		margin-left: -18px;
		margin-top: 1px;
		width: 16px;
		height: 16px;
		content: '';
	}
	
	.msg-wrap .msg-ok:before {
		background-image: url(check-thin.png);
		margin-top: 1px;
	}
	
	.msg-customize .msg-ok:before {
		margin-top: 2px;
	}
	
	.msg-wrap .msg-cancel:before {
		background-image: url(x.png);
	}
	
	.msg-wrap button:last-of-type {
		margin-right: 0;
	}
	
	.msg-wrap hr {
		border-top: 1px solid #eee;
		border-bottom: 1px solid #fff;
	}
	
	.msg-wrap textarea {
		margin-top: 4px;
	}
	
	.msg-container {
		background-color: rgba(255, 255, 255, .85);
		position: fixed;
		width: 100%;
		height: 100%;
		z-index: 100;
		top: 0;
		left: 0;
		align-items: center;
		justify-content: center;
		opacity: 0;
		display: flex;
		pointer-events: none;
		transition: opacity 150ms ease-in;
	}
	
	.msg-customize .combo-set-area:before {
		content: '';
	}
	.msg-customize .combo-set-area {
		display:flex;
		align-items: center;
		justify-content: center;
		padding: 30px 0;
		border: 1px dashed #eee;
	}
</style>
</head>
<body>
<div class="msg-container msg-share"> <!-- right now i reuse msg-share for other messages, so keep this one first so when i do querySelector('.msg-share') it gets the right one-->
	<div class="msg-wrap msg-share">
		<div class="msg-header">Share Function</div>
		<div class="msg-body">
			<small>Leave fields blank to share as anonymous user</small>
			<div class="row"><span>User Name</span> <input type="text"></div>
			<div class="row"><span>Password</span> <input type="text"></div>
			<div class="row"><span>Avatar</span> <input type="text"></div>
			<div class="row">
				<button class="msg-ok"><span></span>Share</button>
				<button class="msg-cancel" onclick="hideMsg('.msg-share')"><span></span>Cancel</button>
			</div>
		</div>
	</div>
</div>
<div class="msg-container msg-share msg-trash">
	<div class="msg-wrap">
		<div class="msg-header">Trash Function</div>
		<div class="msg-body">
			<div class="row">Are you sure you want to remove this funciton? You will not be able to recover it.</div>
			<div class="row">
				<button class="msg-ok"><span></span>Confirm</button>
				<button class="msg-cancel" onclick="hideMsg('.msg-trash')"><span></span>Cancel</button>
			</div>
		</div>
	</div>
</div>
<div class="msg-container msg-customize">
	<div class="msg-wrap">
		<div class="msg-header">Configure</div>
		<div class="msg-body">
			<div class="row">
				<span>Group</span>
				<select>
					<option>Entertainment</option>
					<option selected="true">Miscellaneous</option>
					<option>Navigation</option>
					<option>Social</option>
					<option>Tabs</option>
					<option>Zoom</option>
				</select>
			</div>
			<div class="row"><span>Name</span> <input type="text" class="msg-cust-name"></div>
			<div class="row"><span>Description</span> <input type="text" class="msg-cust-desc"></div>
			<textarea rows="3" cols="100">code code code code code code code code code code code code</textarea>
			<hr>
			<small style="display:block; text-align:center; position:absolute; width:95%;">PLACE MOUSE HERE AND DO MOUSE COMBO</small>
			<div class="combo-set-area">
				<img src="mouse-left.png" /> + <img src="mouse-right.png"/>
			</div>
			<div class="row">
				<button class="msg-ok"><span></span>Apply</button>
				<button class="msg-cancel" onclick="hideMsg('.msg-customize')"><span></span>Cancel</button>
			</div>
		</div>
	</div>
</div>
<div class="msg-container msg-customize msg-create">
	<div class="msg-wrap">
		<div class="msg-header">Create Function</div>
		<div class="msg-body">
			<div class="row">
				<span>Group</span>
				<select>
					<option>Entertainment</option>
					<option selected="true">Miscellaneous</option>
					<option>Navigation</option>
					<option>Social</option>
					<option>Tabs</option>
					<option>Zoom</option>
				</select>
			</div>
			<div class="row"><span>Name</span> <input type="text" class="msg-cust-name"></div>
			<div class="row"><span>Description</span> <input type="text" class="msg-cust-desc"></div>
			<textarea rows="3" cols="100">code code code code code code code code code code code code</textarea>
			<hr>
			<small style="display:block; text-align:center; position:absolute; width:95%;">PLACE MOUSE HERE AND DO MOUSE COMBO</small>
			<div class="combo-set-area">
				<img src="mouse-left.png" /> + <img src="mouse-right.png"/>
			</div>
			<div class="row">
				<button class="msg-ok"><span></span>Create</button>
				<button class="msg-cancel" onclick="hideMsg('.msg-create')"><span></span>Cancel</button>
			</div>
		</div>
	</div>
</div>
<div id="main-wrap">
	<div id="header">
		<img class="icon" src="icon-shadow.png">
		<span class="logo">MouseControl</span>
		<span class="version">v2.0</span>
		<span class="title">Preferences</span>
	</div>
	<div id="general" class="group">
		<span class="subhead">General</span>
		<span class="opt">
			Automatic Updates
			<select id="automatic_updates" name="automatic_updates">
				<option value="off">Off</option>
				<option value="on">On</option>
			</select>
		</span>
		<span class="opt">
			Restore Defaults
			<button>Restore</button>
		</span>
		<span class="opt">
			Export/Import
			<span><button class="export">Export</button><button class="import">Import</button></span>
		</span>
	</div>
	<div id="timing" class="group">
		<span class="subhead">Timing</span>
		<span class="opt">Double Click Speed<input type="text" value="200"/></span>
		<span class="opt">Hold Duration<input type="text" value="300"/></span>
	</div>
	<div id="tabs" class="group">
		<span class="subhead">Tabs</span>
		<span class="opt">
			New Tab Position
			<select id="new_tab_position" name="new_tab_position">
				<option value="end">End of Tab Bar</option>
				<option value="next">Next to Current Tab</option>
			</select>
		</span>
		<span class="opt">
			Duplicated Tab Position
			<select id="duplicated_tab_position" name="duplicated_tab_position">
				<option value="end">End of Tab Bar</option>
				<option value="next">Next to Current Tab</option>
			</select>
		</span>
	</div>
	<div id="zoom" class="group">
		<span class="subhead">Zoom</span>
		<span class="opt">
			Zoom Display
			<select id="zoom_display" name="zoom_display">
				<option value="hide">Hide</option>
				<option value="show">Show</option>
			</select>
		</span>
		<span class="opt">
			Zoom Context
			<select id="zoom_context" name="zoom_context">
				<option value="all">All Content</option>
				<option value="text">Text Only</option>
			</select>
		</span>
		<span class="opt">
			Zoom Style
			<select id="zoom_style" name="zoom_style">
				<option value="global">Global</option>
				<option value="site_specific">Site Specific</option>
				<option value="temporary">Temporary</option>
			</select>
		</span>
	</div>
	<style>
		#configActions {
			display: flex;
			justify-content: center;
		}
		#configActions button {
			flex-grow: 0;
			margin-right: 10px;
		}
		#configActions button span {
			width: 13px;
			display: inline-block;
			height: 13px;
			background-repeat: no-repeat;
			background-position: left center;
			margin-right: 1px; /*for icon*/
			vertical-align: middle;
			position: relative;
			top: -1px;
			left: -3px;
		}
		#configActions button:last-of-type {
			margin-right: 0;
		}
		.config-action-create span {
			background-image: url(pencil.png);
		}
		.config-action-download span {
			background-image: url(download_fat.png);
		}
		
		#configWrap .opt span:last-of-type img {
			vertical-align: middle;
		}
	</style>
	<div id="configuration" class="group" style="position:relative;">
		<span class="subhead">Configuration</span>
		<div id="configActions">
			<button class="config-action-create" onclick="showMsg('.msg-create')"><span></span>Create Custom Function</button>
			<button class="config-action-download"><span></span>Download Custom Functions</button>
		</div>
		<div id="configHead">
			<span>Action</span>
			<span>Mouse Binding</span>
		</div>
		<div id="configWrap">
			<div class="configSubhead">TABS<hr></div>
			<span class="opt" group="tabs">
				<div class="pseudo-config trash-function"></div><div class="pseudo-config configure-function"></div><div class="pseudo-config share-function"></div>
				<span>
					Select Tab to Right
					<small>Focuses tab to right of current tab</small>
				</span>
				<span><img src="mouse-left.png" /> + <img src="mouse-left.png"/></span>
			</span>
			<hr>
			<span class="opt" group="tabs">
				<div class="pseudo-config trash-function"></div><div class="pseudo-config configure-function"></div><div class="pseudo-config share-function"></div>
				<span>
					Select Tab to Left
					<small>Focuses tab to left of current tab</small>
				</span>
				<span><img src="mouse-left.png" /> + <img src="mouse-right.png"/></span>
			</span>
			<hr>
			<span class="opt" group="tabs">
				<div class="pseudo-config trash-function"></div><div class="pseudo-config configure-function"></div><div class="pseudo-config share-function"></div>
				<span>
					Jump to Last Tab
					<small>Selects previously used tab across windows. If executed during moving select right/left, will select initial tab </small>
				</span>
				<span><img src="mouse-left.png" /> + <img src="mouse-right.png" /> , <img src="mouse-right.png" /></span>
			</span>
			<hr>
			<span class="opt" group="tabs">
				<div class="pseudo-config trash-function"></div><div class="pseudo-config configure-function"></div><div class="pseudo-config share-function"></div>
				<span>Close Tab</span>
				<span><img src="mouse-right.png" /> + <img src="mouse-right.png"/></span>
			</span>
			<hr>
			<span class="opt" group="tabs">
				<div class="pseudo-config trash-function"></div><div class="pseudo-config configure-function"></div><div class="pseudo-config share-function"></div>
				<span>Open Last Closed Tab</span>
				<span><img src="mouse-right.png" /> + <img src="mouse-right.png"/> , <img src="mouse-right.png"/></span>
			</span>
			<hr>
			<span class="opt" group="tabs">
				<div class="pseudo-config trash-function"></div><div class="pseudo-config configure-function"></div><div class="pseudo-config share-function"></div>
				<span>Close All Tabs of Current Domain</span>
				<span><img src="mouse-right.png" /> + </span>
			</span>
			<hr>
			<span class="opt" group="tabs">
				<div class="pseudo-config trash-function"></div><div class="pseudo-config configure-function"></div><div class="pseudo-config share-function"></div>
				<span>New Tab</span>
				<span><img src="mouse-right.png" /> + </span>
			</span>
			<hr>
			<span class="opt" group="tabs">
				<div class="pseudo-config trash-function"></div><div class="pseudo-config configure-function"></div><div class="pseudo-config share-function"></div>
				<span>Duplicate Tab</span>
				<span><img src="mouse-right.png" /> + </span>
			</span>
			<hr>
			<div class="configSubhead">ZOOM<hr></div>
			<span class="opt" group="zoom">
				<div class="pseudo-config trash-function"></div><div class="pseudo-config configure-function"></div><div class="pseudo-config share-function"></div>
				<span>Zoom In</span>
				<span><img src="mouse-right.png" /> + </span>
			</span>
			<hr>
			<span class="opt" group="zoom">
				<div class="pseudo-config trash-function"></div><div class="pseudo-config configure-function"></div><div class="pseudo-config share-function"></div>
				<span>Zoom Out</span>
				<span><img src="mouse-right.png" /> + </span>
			</span>
			<hr>
			<span class="opt" group="zoom">
				<div class="pseudo-config trash-function"></div><div class="pseudo-config configure-function"></div><div class="pseudo-config share-function"></div>
				<span>Reset Zoom</span>
				<span><img src="mouse-right.png" /> + </span>
			</span>
			<hr>
		</div>
	</div>

</div>
<style>
	#configHead {
		font-weight: bold;
		font-size: 12px;
		display: flex;
		justify-content: space-around;
		margin-bottom: 2px;
		display: none;
	}
	#configHead span {
		flex-grow: 1;
		max-width: 50%;
		min-width: 50%;
		width: 50%;
	}
	#configHead span:first-of-type {
		padding-left: 5px;
	}
	#configWrap {
		border: 0; /*1px solid #D9D9D9;*/
		display: flex;
		flex-direction: column;
	}
	#configWrap .opt {
		flex-grow: 1;
		line-height: normal;
		padding: 2px 20px;
		font-size: 11px;
		position: relative;
	}
	
	#configWrap .opt:hover .pseudo-config {
		display: block;
	}
	
	#configWrap .opt span {
		flex-grow: 1;
		width: 45% !important;
	}
	
		#configWrap .opt span:first-of-type {
			display: flex;
			flex-direction: column;
		}
		
		#configWrap .opt span:first-of-type small {
			color: #999;
			padding-right: 5px;
		}
	
	#configWrap > hr {
		margin: 5px auto;
		border: 0;
		border-top: 1px solid #eee;
		border-bottom: 1px solid #fff;
		width: 85%;
	}
	
	#configWrap .nohr + hr {
		display: none;
	}
	
	.configSubhead {
		font-weight: bold;
		padding: 5px 10px 0px;
		padding-bottom: 5px;
		color: #44474D;
	}
	
	.configSubhead:first-of-type {
		padding-top: 0;
	}
	
	.configSubhead hr{
		border-width: 1px 0px 0px;
		border-style: solid none none;
		border-color: rgba(68, 71, 77,.7);
		-moz-border-top-colors: rgba(68, 71, 77,.7);
		-moz-border-right-colors: none;
		-moz-border-bottom-colors: none;
		-moz-border-left-colors: none;
		border-image: none;
		margin: 5px 0px 0px;
	}
</style>
</body>
</html>